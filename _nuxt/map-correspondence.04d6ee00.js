import{_ as D}from"./HeaderViz.194764a4.js";import{_ as N,a as R}from"./BaseLoader.73feba50.js";import{a as C,l as y,w as A,b as V,s as Z,m as E,e as G,f as _,u as B,h as S,p as P,F as U,o as K}from"./entry.5e82415a.js";import"./nuxt-link.53277c78.js";const Y={class:"pb-12 pt-6"},H=S("div",{id:"map"},null,-1),ee={__name:"map-correspondence",setup(Q){const x=C("allAuthors"),v=y("block");A(()=>x.value,(n,o)=>{v.value="none",f(w.value,L,r,"from")}),V(()=>{x.value.length>0&&(v.value="none")});const k=Z(),w=C("mapCorrespondenceDatasetIn"),T=C("mapCorrespondenceDatasetOut"),u=y("from");let r;const s=y(),m=y();function f(n,o,h,$){s.value!=null&&(h.removeLayer(s.value),s.value=o.markerClusterGroup({spiderLegPolylineOptions:{weight:0},icon:m.value,polygonOptions:{fillColor:"transparent",color:"#fff",opacity:0},iconCreateFunction:function(a){const e=Math.max(30,Math.min(7*a.getChildCount(),100));return o.divIcon({html:a.getChildCount(),className:"mycluster",iconSize:o.point(e,e)})}}));for(let a=0;a<n.length;a++){const e=n[a];if(e.lat!=null&&e.lon!=null){let g="";for(let t=0;t<e.notes.length;t++){let F=e.agent[t],l={dob:e.agent_dob[t],dod:e.agent_dod[t],occupation:e.agent_occupation[t],orientation:e.agent_sexual_orientation[t],nationality:e.agent_nationality[t].join("/")},j=e.recipient[t],p={dob:e.recipient_dob[t],dod:e.recipient_dod[t],occupation:e.recipient_occupation[t],orientation:e.recipient_sexual_orientation[t],nationality:e.recipient_nationality[t].join("/")},c=e.page[t];c.includes("-")?c="pp. "+c:c="p. "+c;let M="a",I="a",O="^[aieouAIEOU].*";l.nationality.split("")[0].match(O)&&(M="an"),p.nationality.split("")[0].match(O)&&(I="an");let i="";if(e.notes[t]!="undefined"){i=": "+e.notes[t],i=i.split("_");const b=[];for(let d=0;d<i.length;d++)b.push(i[d]),d%2==0&&d<i.length-1?b.push("<i>"):d%2==1&&b.push("</i>");i=b.join("")}g+=`
          <div class='border-b border-dotted border-gray-600 pb-1 pt-4 px-2'>
            <span class='font-bold'>${e.dateStart[t]} — ${e.dateEnd[t]}:</span> ${i}
            <br><br>
            <span class='font-bold'>Agent:</span> ${F} (${l.dob} — ${l.dod}) 
            was ${M} ${l.nationality}, ${l.orientation}, ${l.occupation.join(", ")}
            <br>
            <span class='font-bold'>Recipient:</span> ${j} (${p.dob} — ${p.dod}) 
            was ${I} ${p.nationality}, ${p.orientation}, ${p.occupation.join(", ")}
            <br>
            <br><br>
            <span class='font-bold'>Source:</span> <span class='italic'>${e.source[t].split("_")[0].split("by")[0]}</span> by <span>${e.source[t].split("_")[0].split("by")[1]}</span>
            (${c})
          </div>
        `}const z=`
        <h2 class='text-md font-bold p-2 border-b border-gray-400'>Letters sent ${$} ${e.city} <span class='font-normal'>(${e.count})</span></h2>
        <div class='px-0 py-0'>
          <p>${g}</p>
        </div>
        <!-- <p>${e.count} meetings</p> -->
      `;s.value.addLayer(o.marker([e.lat,e.lon]).bindPopup(z))}}h.addLayer(s.value)}return V(()=>{r=L.map("map").setView(k.map.center,k.map.zoomInit),L.tileLayer("https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>',maxZoom:10,minZoom:2,ext:"png"}).addTo(r),L.tileLayer("https://stamen-tiles-{s}.a.ssl.fastly.net/toner-labels/{z}/{x}/{y}{r}.{ext}",{attribution:'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',maxZoom:10,minZoom:8,ext:"png"}).addTo(r),m.value=L.icon({iconUrl:"/images/marker.png",iconSize:[20,30],iconAnchor:[2,25],popupAnchor:[6,-30]}),L.Marker.mergeOptions({icon:m.value}),s.value=L.markerClusterGroup({spiderLegPolylineOptions:{weight:0},icon:m.value,polygonOptions:{fillColor:"transparent",color:"#fff",opacity:0},iconCreateFunction:function(n){const o=Math.max(30,Math.min(7*n.getChildCount(),100));return L.divIcon({html:n.getChildCount(),className:"mycluster",style:"{ 'background-color': 'red'}",iconSize:L.point(o,o)})}}),f(w.value,L,r,"from")}),A(()=>u.value,(n,o)=>{n=="to"?f(T.value,L,r,"to"):f(w.value,L,r,"from")}),(n,o)=>{const h=D,$=R,a=N,e=E("FormKit");return K(),G(U,null,[_(h),_($,{title:"Map of Correspondence Between Authors",part1:`
    This interactive map plots correspondence between LGBTQ+ exile writers across the globe. You can choose to either view places letters were sent from or sent to by using the select option directly above the map. The numbers in the icons indicate the number of locations where letters were exchanged between writers in different parts of the world. If you select an icon, they will divide ever more precisely according to location.    `,part2:`
    If you click on an individual location icon, a pop-up box will give you further information about the letters that were exchanged between writers at a given location.
    `}),_(a,{displayLoader:B(v),padding:"py-6"},null,8,["displayLoader"]),S("div",Y,[_(e,{modelValue:B(u),"onUpdate:modelValue":o[0]||(o[0]=g=>P(u)?u.value=g:null),type:"radio",label:" ",options:{from:"Letters sent from",to:"Letters sent to"},help:" ","outer-class":"!mb-0","fieldset-class":"border-0","options-class":"flex gap-8","wrapper-class":"!items-end border-0","decorator-class":"text-gray-500 peer-checked:ring-gray-500 peer-checked:text-gray-500"},null,8,["modelValue"]),H])],64)}}};export{ee as default};
